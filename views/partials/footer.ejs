<!-- footer -->
<footer class="footer">
    <div class="container">
        <div>

            <!-- footer list -->
            <div class="col-12 col-sm-4 col-md-3">
                <h6 class="footer__title">Liên hệ</h6>
                <ul class="footer__list">
                    <li><a class="footer__a" href="mailto:chomeoga1909@gmail.com">chomeoga1909@gmail.com</a></li>
                </ul>
            </div>
            <div class="col-12">
                <div class="footer__copyright">
                    <small class="spane__year">© <span id="currentYear"></span> KiMovies.</small>
                    <ul>
                        <li><a href="privacy.html">Terms of Use</a></li>
                        <li><a href="privacy.html">Privacy Policy</a></li>
                    </ul>
                </div>
            </div>

            
        </div>
    </div>
</footer>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="/js/jquery-3.5.1.min.js"></script>
<script src="/js/bootstrap.bundle.min.js"></script>
<script src="/js/owl.carousel.min.js"></script>
<script src="/js/jquery.mousewheel.min.js"></script>
<script src="/js/jquery.mCustomScrollbar.min.js"></script>
<script src="/js/select2.min.js"></script>
<script src="/js/plyr.min.js"></script>
<script src="/js/jquery.morelines.min.js"></script>
<script>
    let year = (new Date()).getFullYear();
    $('#currentYear').text(year)
</script>
<script>
    feather.replace();
    $('[data-toggle="tooltip"]').tooltip()
</script>

<script src="/js/main.js"></script>
<script>
    //Redirect https
    let protocol = document.location.protocol;
    let hostname = document.location.hostname;
    if (protocol != 'https:' && !hostname.includes('localhost')) {
        let href = document.location.href;
        href = href.replace('http://', 'https://');
        window.location.href = href
    }
    const PHIM = {
        PHIM_BO: 'phim-bo',
        PHIM_LE: 'phim-le'
    }
    var appSearch = new Vue({
        el: "#app-search",
        data: {
            txtSearch: "",
            resultSearch: [],
            hasResultSearch: false,
            activeSearch: false,
            searchType: PHIM.PHIM_LE
        },
        methods: {
            toggleSearch() {
                this.activeSearch = !this.activeSearch;
                if (!this.activeSearch) {
                    this.resultSearch = [];
                    this.txtSearch = "";
                    this.hasResultSearch = false;
                }
            },
            redirectSearch(movie) {
                let url = `/phim/${movie.slug}`;
                if (this.searchType == 'phim-bo') {
                    url = `/phim-bo/phim/${movie.slug}`;
                }
                window.location.href = url
            },
            gotoSearchPage() {
                if (this.txtSearch.length == 0) {
                    return;
                }
                let urlRedirect = `/tim-kiem/${this.txtSearch}/page/1`
                if (this.searchType == PHIM.PHIM_BO) {
                    urlRedirect = `/phim-bo/tim-kiem/${this.txtSearch}/page/1`
                }
                window.location.href = urlRedirect
            },
            async autoSearch() {
                if (this.txtSearch.length == 0) {
                    this.resultSearch = [];
                    this.hasResultSearch = false;
                    return;
                }
                try {
                    let urlSearch = '';
                    if (this.searchType == PHIM.PHIM_LE) {
                        urlSearch = '/api/search/' + this.txtSearch.trim()
                    } else {
                        urlSearch = '/api/search/phim-bo/' + this.txtSearch.trim()
                    }
                    let res = await axios.get(urlSearch);
                    this.resultSearch = [];
                    let result = res.data.list;
                    if (result.length > 0) {
                        this.hasResultSearch = true;
                    }
                    for (let i = 0; i < result.length; i++) {
                        this.resultSearch.push(result[i]);
                    }

                } catch (error) {
                    console.log(error.message);
                    this.resultSearch = [];
                    this.hasResultSearch = false;
                }

            },
        },
        created: async function () {},
        mounted() {
            $('#searchType').select2({
                placeholder: "Chọn thể loại",
                templateSelection: (data) => {
                    if (data.id === '') { // adjust for custom placeholder values
                        return 'Chọn thể loại';
                    }
                    this.searchType = data.id;
                    this.autoSearch();
                    return data.text;
                }
            });
        }
    });
</script>

</body>

</html>